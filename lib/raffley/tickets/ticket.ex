defmodule Raffley.Tickets.Ticket do
  use Ecto.Schema
  import Ecto.Changeset

  schema "tickets" do
    field :comment, :string
    field :price, :integer

    # not required as the belongs_to will make them under the hood
    # field :raffle_id, :id # autogenerated
    # field :user_id, :id # autogenerated

    # belongs_to added manually
    belongs_to :raffle, Raffley.Raffles.Raffle
    belongs_to :user, Raffley.Accounts.User

    timestamps(type: :utc_datetime)
  end

  @doc false
  def changeset(ticket, attrs) do
    ticket
    |> cast(attrs, [:price, :comment])
    # we want the comment to be optional
    # |> validate_required([:price, :comment])
    |> validate_required([:price])
    # added manually
    |> validate_length(:comment, max: 100)
    # to convert db's foreign key exceptions to changeset errors
    |> assoc_constraint(:raffle)
    |> assoc_constraint(:user)
  end
end
