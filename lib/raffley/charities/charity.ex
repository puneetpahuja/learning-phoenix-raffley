defmodule Raffley.Charities.Charity do
  use Ecto.Schema
  import Ecto.Changeset

  schema "charities" do
    field :name, :string
    field :slug, :string

    # association
    # you don't need to make an association bidirectional
    # declaring this has_many is only necessary if we want to be able to get all the raffles belonging to a charity
    has_many :raffles, Raffley.Raffles.Raffle
    # generated by ecto under-the-hood
    # field :raffles # list of 0 or more raffle structs that charity is associated with

    # setting the default preload order
    # has_many :raffles, Raffley.Raffles.Raffle,
    #   preload_order: [desc: :ticket_price]

    timestamps(type: :utc_datetime)
  end

  @doc false
  def changeset(charity, attrs) do
    charity
    |> cast(attrs, [:name, :slug])
    |> validate_required([:name, :slug])
    |> unique_constraint(:slug)
    |> unique_constraint(:name)
  end
end
