defmodule Raffley.Repo.Migrations.CreateTickets do
  use Ecto.Migration

  def change do
    create table(:tickets) do
      add :price, :integer
      add :comment, :string
      # on_delete has 3 options
      # :nothing - if the associated raffle is deleted, don't do anything to the tickets table, let the raffle_id remain as is
      # that will raise a DB exception and hence the DB won't let you delete a raffle with tickets in the tickets table
      # :nilify_all - if a associated raffle is deleted, all raffle_id's for those tickets become null
      # :delete_all - if a associated raffle is deleted, all ticket rows for that raffle are also deleted
      # add :raffle_id, references(:raffles, on_delete: :nothing) # autogenerated
      # add :user_id, references(:users, on_delete: :nothing) # autogenerated
      add :raffle_id, references(:raffles, on_delete: :delete_all), null: false
      add :user_id, references(:users, on_delete: :delete_all), null: false

      timestamps(type: :utc_datetime)
    end

    create index(:tickets, [:raffle_id])
    create index(:tickets, [:user_id])
  end
end
